/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  6
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

#include "../parameters"

impellerDiam    #calc "(1-$nonDimGap)*$tankDiam";
CmNorm          #calc "2.0*pow($impellerDiam, 4)/$nBlades";

application     SRFSimpleFoam;

startFrom       latestTime;

startTime       0;

stopAt          endTime;

endTime         5000;

deltaT          1;

writeControl    timeStep;

writeInterval   100;

purgeWrite      1;

writeFormat     ascii;

writePrecision  6;

writeCompression off;

timeFormat      general;

timePrecision   6;

runTimeModifiable true;

functions
{
    forces
    {
        type          forces;

        libs          ("libforces.so");

        writeControl  timeStep;
        timeInterval  1;

        log           yes;

        patches       (innerWall);
        rho           rhoInf;     // Indicates incompressible
        log           true;
        rhoInf        1;          // Redundant for incompressible

        CofR          (0 0 0);    // Rotation around centre line of propeller
    }

    forceCoeffs1
    {
        type        forceCoeffs;
        libs        ("libforces.so");
        log         yes;
        patches     (innerWall);

        rho           rhoInf;     // Indicates incompressible
        log           true;
        rhoInf        1;          // Redundant for incompressible

        CofR          (0 0 0);    // Rotation around centre line of propeller

        liftDir     (0 1 0);
        dragDir     (-1 0 0);
        pitchAxis   (0 0 1);
        magUInf     1;
        lRef        $CmNorm;
        Aref        1;
    }
}

// ************************************************************************* //
